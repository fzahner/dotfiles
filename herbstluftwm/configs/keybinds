#!/bin/bash

# Function to make commands less annoying
hc() {
    herbstclient "$@"
}


# ------- Keybindings ------
hc keyunbind --all

Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-x close

# Launch apps
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
hc keybind $Mod-t spawn alacritty
hc keybind $Mod-w spawn firefox
hc keybind $Mod-e spawn xdg-open .
hc keybind $Mod-r spawn rofi -show combi -combi-modes "window,run,ssh,drun" -modes combi
hc keybind $Mod-s spawn rofi -show ssh

# Lockscreen
hc keybind $Mod-b spawn betterlockscreen --lock blur

# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# cycle through tags

hc keybind $Mod-comma  use_index -1 --skip-visible
hc keybind $Mod-period  use_index +1 --skip-visible

# layouting
hc keybind $Mod-q remove
hc keybind $Mod-f floating toggle
hc keybind $Mod-m fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-d set_attr clients.focus.decorated toggle
hc keybind $Mod-c set_attr clients.focus.minimized true
hc keybind $Mod-Shift-c jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1
hc keybind $Mod-v spawn ~/.config/herbstluftwm/scripts/toggle-minimal-frames.sh

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-i jumpto urgent

# Fn Keys and other buttons
hc keybind XF86AudioRaiseVolume spawn amixer -M set Master 5%+
hc keybind XF86AudioLowerVolume spawn amixer -M set Master 5%-
hc keybind XF86AudioMute spawn amixer -q sset Master toggle

# TODO:
# hc keybind XF86MyComputer
# hc keybind XF86HomePage
# hc keybind XF86Calculator
# hc keybind XF86AudioMedia
# hc keybind XF86AudioPrev
# hc keybind XF86AudioNext
# hc keybind XF86AudioPlay
# hc keybind XF86AudioStop
# hc keybind XF86MonBrightnessDown
# hc keybind XF86MonBrightnessUp

# ---------- Tags ---------------
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done
