(defwidget bar []
    (centerbox :orientation "h"
        (workspaces)
        (music)
        (sidestuff)))

(defvar tag-1 "tag-passive")
(defvar tag-2 "tag-passive")
(defvar tag-3 "tag-passive")
(defvar tag-4 "tag-passive")
(defvar tag-5 "tag-passive")
(defvar tag-6 "tag-passive")
(defvar tag-7 "tag-passive")
(defvar tag-8 "tag-passive")
(defvar tag-9 "tag-passive")
(defvar powermenu-visible "invisible-powermenu")

(defpoll battery-percentage :interval "30s" "cat /sys/class/power_supply/BAT0/capacity")
(defpoll audio-volume :interval "2s" "amixer sget 'Master' | awk -F'[\\[\\]]' '/%/ { gsub(\"%\", \"\", $2); print $2; exit }'")

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ; Label metrics
    (label :class "metric-label" :text "ÓøÖ  ${round(EWW_RAM.used_mem / 1000000000, 1)}G")
;    (label :class "metric-label" :text "ÔÉá ${round(EWW_DISK["/"].used_perc,1)}%")
    (label :class "metric-label" :text "Û∞ÇÄ ${battery-percentage}%")
;    (label :class "metric-label" :text "Óò∏ ${audio-volume}%")
    (label :class "metric-label" :text "Óº™ ${EWW_TEMPS.CORETEMP_PACKAGE_ID_0}C")

    (label :class "spacer" :text " | ")
; Metric slider
;    (metric :label "ÓøÖ "
;            :value {EWW_RAM.used_mem_perc}
;            :onchange "")
    (metric :label "ÔÉá"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
;    (metric :label "Û∞ÇÄ"
;            :value battery-percentage
;            :onchange "")
    (metric :label "Óò∏"
            :value audio-volume
            :onchange "")

    time
    (box :class "powermenu-box {powermenu-visible}"
        (button :class "powermenu-toggle hover-effect {powermenu-visible}"  :onclick "~/.config/eww/powermenu/toggle_powermenu" "‚èª")

    )
    ))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :class tag-1 :onclick "wmctrl -s 0" 1)
    (button :class tag-2 :onclick "wmctrl -s 1" 2)
    (button :class tag-3 :onclick "wmctrl -s 2" 3)
    (button :class tag-4 :onclick "wmctrl -s 3" 4)
    (button :class tag-5 :onclick "wmctrl -s 4" 5)
    (button :class tag-6 :onclick "wmctrl -s 5" 6)
    (button :class tag-7 :onclick "wmctrl -s 6" 7)
    (button :class tag-8 :onclick "wmctrl -s 7" 8)
    (button :class tag-9 :onclick "wmctrl -s 8" 9)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "5s"
  "scripts/getvol")

(defpoll time :interval "10s"
  :class "dateTime"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "3.5%")
  (bar))
